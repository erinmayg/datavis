{"version":3,"sources":["components/DFDRChart.jsx","svg/plus.svg","svg/remove.svg","App.js","reportWebVitals.js","index.js"],"names":["DFDRChart","props","constructSeries","columns","map","col","name","data","time","t","i","filter","isNaN","columnsList","series","options","id","chart","group","type","yaxis","labels","minWidth","xaxis","formatter","val","timestamp","moment","Date","format","stroke","width","theme","palette","dataLabels","enabled","enabledOnSeries","opt","dataPointIndex","markers","size","strokeWidth","height","length","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","strokeLinecap","strokeLinejoin","d","SvgPlus","_ref","svgRef","title","titleId","className","fill","viewBox","xmlns","ref","ForwardRef","SvgRemove","App","filetypes","useState","file","setFile","sheets","setSheets","selectedSheet","setSelectedSheet","cols","setCols","selectedColsList","setSelectedColsList","setData","setTime","addColumnsList","removeColumnsList","list","splice","console","log","accept","onChange","e","files","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","cellDates","sheetRows","SheetNames","wsName","ws","Sheets","sheet_to_csv","onerror","error","then","dataCols","split","readCols","placeholder","selected","value","sheet","promise","sheet_to_json","gmt","values","forEach","row","push","readSheet","label","x","isMulti","isClearable","selectedOpts","colsList","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f0f8500.chunk.js","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\nimport moment from 'moment';\n\nfunction DFDRChart(props) {\n  let constructSeries = (columns) =>\n    columns.map((col) => {\n      return {\n        name: col,\n        data: props.time\n          .map((t, i) => [t, props.data[i][col]])\n          .filter((data) => !isNaN(data[1])),\n      };\n    });\n  const constructOptions = (id) => {\n    return {\n      chart: {\n        id: id,\n        group: 'dfdr',\n        type: 'line',\n      },\n      yaxis: {\n        labels: {\n          minWidth: 20,\n        },\n      },\n      xaxis: {\n        type: 'datetime',\n        labels: {\n          formatter: function (val, timestamp) {\n            return moment(new Date(timestamp)).format('HH:mm:ss');\n          },\n        },\n      },\n      stroke: {\n        width: 1,\n      },\n      theme: {\n        palette: 'palette1',\n      },\n      dataLabels: {\n        enabled: false,\n        enabledOnSeries: [0],\n        formatter: function (val, opt) {\n          return props.data[opt.dataPointIndex]['Comments'];\n        },\n      },\n      markers: {\n        size: 2,\n        strokeWidth: 0,\n      },\n    };\n  };\n\n  return (\n    <div>\n      {props.columnsList.map((columns, i) => {\n        return (\n          <Chart\n            key={i}\n            series={constructSeries(columns)}\n            options={constructOptions(i + 1)}\n            height={500 / props.columnsList.length}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default DFDRChart;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: \"{2}\",\n  d: \"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n});\n\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"w-6 h-6 button add\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.8b9b2c39.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: \"{2}\",\n  d: \"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n});\n\nfunction SvgRemove(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"w-6 h-6 button remove\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRemove);\nexport default __webpack_public_path__ + \"static/media/remove.d2c74e73.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport './App.css';\nimport * as XLSX from 'xlsx';\nimport Select from 'react-select';\nimport DFDRChart from './components/DFDRChart';\nimport { ReactComponent as AddButton } from './svg/plus.svg';\nimport { ReactComponent as RemoveButton } from './svg/remove.svg';\n\nfunction App() {\n  let filetypes = '.xls, .xlsx';\n\n  const [file, setFile] = useState([]);\n  const [sheets, setSheets] = useState([]);\n  const [selectedSheet, setSelectedSheet] = useState();\n  const [cols, setCols] = useState([]);\n  const [selectedColsList, setSelectedColsList] = useState([[]]);\n  const [data, setData] = useState([]);\n  const [time, setTime] = useState([]);\n\n  const readCols = (file) => {\n    const promise = new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onload = (e) => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: 'buffer',\n          cellDates: true,\n          sheets: 0,\n          sheetRows: 1,\n        });\n        setSheets(wb.SheetNames);\n        setSelectedSheet(wb.SheetNames[0]);\n        const wsName = wb.SheetNames[0];\n        const ws = wb.Sheets[wsName];\n        const cols = XLSX.utils.sheet_to_csv(ws);\n        resolve(cols);\n      };\n\n      reader.onerror = (error) => {\n        reject(error);\n      };\n    });\n\n    promise.then((dataCols) => setCols(dataCols.split(',')));\n  };\n\n  const readSheet = (sheet) => {\n    const promise = new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onload = (e) => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: 'buffer',\n          cellDates: true,\n          sheets: sheet,\n        });\n        const ws = wb.Sheets[sheet];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n\n      reader.onerror = (error) => {\n        reject(error);\n      };\n    });\n\n    let gmt = [];\n\n    promise.then((data) => {\n      setData(data);\n      Object.values(data).forEach((row) => {\n        gmt.push(row['GMT']);\n      });\n      setTime(gmt);\n    });\n  };\n\n  const addColumnsList = () => {\n    setSelectedColsList([...selectedColsList, []]);\n  };\n\n  const removeColumnsList = (i) => {\n    const list = [...selectedColsList];\n    list.splice(i, 1);\n    console.log(list);\n    setSelectedColsList(list);\n  };\n\n  return (\n    <div className='App'>\n      <h1>DFDR Data Visualisation</h1>\n      <label>\n        Upload file ({filetypes}):\n        <input\n          type='file'\n          accept={filetypes}\n          onChange={(e) => {\n            let file = e.target.files[0];\n            setFile(file);\n            readCols(file);\n          }}\n        />\n      </label>\n      {sheets.length > 0 && (\n        <div className='flex'>\n          <label>Choose sheet:</label>\n          <Select\n            className='select'\n            placeholder='Sheet'\n            onChange={(selected) => {\n              setSelectedColsList([[]]);\n              setSelectedSheet(selected.value);\n              readSheet(selected.value);\n            }}\n            options={sheets.map((sheet) => {\n              return { value: sheet, label: sheet };\n            })}\n          />\n        </div>\n      )}\n      {selectedSheet && cols.length > 0 && (\n        <div>\n          <label>Choose column:</label>\n          {selectedColsList.map((x, i) => {\n            return (\n              <div className='flex' key={i}>\n                <Select\n                  key={i}\n                  className='select'\n                  placeholder='Column(s)'\n                  isMulti={true}\n                  isClearable={true}\n                  onChange={(selected) => {\n                    let selectedOpts = selected.map((opt) => opt.value);\n                    const colsList = [...selectedColsList];\n                    colsList[i] = selectedOpts;\n                    setSelectedColsList(colsList);\n                  }}\n                  options={cols.map((col) => {\n                    return { value: col, label: col };\n                  })}\n                />\n                <AddButton onClick={addColumnsList} />\n                {i !== 0 && <RemoveButton onClick={removeColumnsList} />}\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {selectedColsList[0].length > 0 && (\n        <DFDRChart time={time} data={data} columnsList={selectedColsList} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}